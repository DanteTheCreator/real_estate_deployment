# Multi-stage production build for Refactored Scraper
FROM python:3.11-slim as builder

# Set build arguments
ARG BUILD_ENV=production

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1

# Install build dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Create virtual environment
RUN python -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Copy and install requirements
COPY requirements.txt /tmp/
RUN pip install --no-cache-dir -r /tmp/requirements.txt

# Production stage
FROM python:3.11-slim

# Create non-root user
RUN groupadd -r scraper && useradd -r -g scraper -s /bin/false scraper

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PATH="/opt/venv/bin:$PATH" \
    PYTHONPATH="/app"

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    curl \
    procps \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Copy virtual environment from builder
COPY --from=builder /opt/venv /opt/venv

# Set working directory
WORKDIR /app

# Create necessary directories and set proper permissions
RUN mkdir -p /app/logs /app/data/reports /app/data/property_images && \
    chown -R scraper:scraper /app

# Copy application files
COPY --chown=scraper:scraper database.py .
COPY --chown=scraper:scraper schemas.py .
COPY --chown=scraper:scraper config.py .
COPY --chown=scraper:scraper scraper/ ./scraper/

# Create startup script
RUN echo '#!/bin/bash\n\
set -e\n\
echo "ðŸš€ Starting ComfyRent MAXIMUM SPEED Scraper..."\n\
echo "âš¡ Maximum Speed Mode: NO LIMITS, NO BATCHING"\n\
echo ""\n\
cd /app/scraper\n\
exec python3 myhome_scraper.py "$@"' > /app/start-scraper.sh && \
    chmod +x /app/start-scraper.sh && \
    chown scraper:scraper /app/start-scraper.sh

# Switch to non-root user
USER scraper

# Set working directory
WORKDIR /app

# Health check - check if scraper process is running
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD pgrep -f "python.*myhome_scraper.py" || exit 1

# Default environment variables for production
ENV MAX_PROPERTIES=50000 \
    BATCH_SIZE=50 \
    SCRAPE_INTERVAL=15 \
    SCRAPE_MODE=continuous \
    REPORT_FORMAT=json \
    RUN_ONCE=false \
    SCRAPER_CONCURRENT_LANGUAGES=false

# Use the startup script as entrypoint
ENTRYPOINT ["/app/start-scraper.sh"]
CMD []
